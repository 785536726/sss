302


1.var和let的区别
2.闭包优点及常见的闭包
3.Ajax和jsonp的区别
4.常见的js兼容问题
5.常见的回调函数
6.数组去重
7.apply，call，bind 区别
8.了解Js中clone
9.js操作的是行内样式
10.json和jsonp的区别
11.jsonp没有调用XMLHTTPRequest对象
12.同源策略
13.事件的绑定监听
14.call和callee区别
15.自执行函数的特点
16.IE事件和dom事件的区别
17.Xhtml和html的区别
18.内存溢出
19.jq为什么可以实现链式调用
==========================================================
内存地址，settimeout是window的一个方法
=============================================================
升班答辩
1.js防抖和节流？
       在进行窗口的resize、scroll，输入框内容校验等操作时，如果事件处理函数调用的频率无限制，会加重浏览器的负担，导致用户体验非常糟糕。此时我们可以采用debounce（防抖）和throttle（节流）的方式来减少调用频率，同时又不影响实际效果。
       函数防抖（debounce）：当持续触发事件时，一定时间段内没有再触发事件，事件处理函数才会执行一次，如果设定的时间到来之前，又一次触发了事件，就重新开始延时。如下图，持续触发scroll事件时，并不执行handle函数，当1000毫秒内没有触发scroll事件时，才会延时触发scroll事件。
       函数节流（throttle）：当持续触发事件时，保证一定时间段内只调用一次事件处理函数。节流通俗解释就比如我们水龙头放水，阀门一打开，水哗哗的往下流，秉着勤俭节约的优良传统美德，我们要把水龙头关小点，最好是如我们心意按照一定规律在某个时间间隔内一滴一滴的往下滴。如下图，持续触发scroll事件时，并不立即执行handle函数，每隔1000毫秒才会执行一次handle函数。


2.js重绘和重排？
       浏览器下载完页面中的所有组件――HTML标记、JavaScript、CSS、图片之后会解析生成两个内部数据结构――DOM树和渲染树。
       DOM树表示页面结构，渲染树表示DOM节点如何显示。DOM树中的每一个需要显示的节点在渲染树种至少存在一个对应的节点（隐藏的DOM元素disply值为none 在渲染树中没有对应的节点）。渲染树中的节点被称为“帧”或“盒",符合CSS模型的定义，理解页面元素为一个具有填充，边距，边框和位置的盒子。一旦DOM和渲染树构建完成，浏览器就开始显示（绘制）页面元素。
       当DOM的变化影响了元素的几何属性（宽或高），浏览器需要重新计算元素的几何属性，同样其他元素的几何属性和位置也会因此受到影响。浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树。这个过程称为重排。完成重排后，浏览器会重新绘制受影响的部分到屏幕，该过程称为重绘。由于浏览器的流布局，对渲染树的计算通常只需要遍历一次就可以完成。但table及其内部元素除外，它可能需要多次计算才能确定好其在渲染树中节点的属性，通常要花3倍于同等元素的时间。这也是为什么我们要避免使用table做布局的一个原因。
       并不是所有的DOM变化都会影响几何属性，比如改变一个元素的背景色并不会影响元素的宽和高，这种情况下只会发生重绘。
       重排何时发生
很显然，每次重排，必然会导致重绘，那么，重排会在哪些情况下发生？

       a、添加或者删除可见的DOM元素
       b、元素位置改变
       c、元素尺寸改变
       d、元素内容改变（例如：一个文本被另一个不同尺寸的图片替代）
       e、页面渲染初始化（这个无法避免）
       f、浏览器窗口尺寸改变
       这些都是显而易见的，或许你已经有过这样的体会，不间断地改变浏览器窗口大小，导致UI反应迟钝（某些低版本IE下甚至直接挂掉），现在你可能恍然大悟，没错，正是一次次的重排重绘导致的！

  

3.BOM中的close在不同浏览器中的表现形式？
       火狐和IE不允许脚本关闭窗口。

4.img图片在网页中横向排列默认的空隙？ 
       img是行内块元素，在书写代码时img标签之间的回车符会变成文字分隔符，显示在页面中就是图片之间的空隙。
解决方法：①img设置为浮动；②把img转化为行内块元素

5.cookie加密方式？

6.常用的缓存方式？
       indexdd；

7.parseint()
       第一个参数是要传入的值，第二个参数是进制；

8.svg，pvg？

9.CDN缓存和同源机制？

10.BFC

11.如何结决AJAX超时缓存？

12.如何减少DOM操作

13，当时使用addeventlistener绑定事件时，必须用preventDefault

14.什么是工厂模式？

15.工厂模式+构造函数的弊端？
       会造成资源浪费

16.json和XML，xml，xhtml的区别？
        JSON(JavaScript Object Notation)一种轻量级的数据交换格式，采用兼容性很高的、完全独立的语言文本格式，具有良好的可读和便于快速编写的特性。可在不同平台之间进行数据交换。
        XML：eXtensibale Markup language可扩展性标记语言 是一种跨平台语言，编码更自由。
        html：超文本标记语言 是最早写网页的语言，但编码不规范，主要用于控制数据的显示和外观。语法较为松散，不严谨的web语言；
        xhtml：可扩展的超文本标记语言 其实就是严谨而准确的html， 对html进行了规范，编码更加严谨，是一种过渡语言，html向xml过渡的语言；
17.new操作符具体干了什么呢?
       1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。
       2、属性和方法被加入到 this 引用的对象中。
       3、新创建的对象由 this 所引用，并且最后隐式的返回 this 
18.同步和异步？
        同步：后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的
        异步：每一个任务有一个或多个回调函数（callback），前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的
        "异步模式"编程的4种方法
        1.回调函数
        2.事件监听,任务的执行不取决于代码的顺序，而取决于某个事件是否发生
        3.发布订阅模式，也叫观察者模式
        4.Promises对象

19.jquery为什么可以实现链式调用？
       在一个方法执行后使用return this将该对象折返回来，使函数执行后重新指向该对象。
20.如何清除浮动
       1.结尾处加空标签，设置clear：both；
       2.给父级设置overflow：hidden；
       3.通过伪类after和zoom
21.什么是原型链
       当访问一个对象的某个属性时，会先在这个对象本身属性上查找，如果没有找到，则会去它的__proto__隐式原型上查找，即它的构造函数的prototype，如果还没有找到就会再在构造函数的prototype的__proto__中查找，这样一层一层向上查找就会形成一个链式结构，我们称为原型链。                        
22.link,@import区别？
23.substr和substring的区别？
